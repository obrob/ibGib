//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("LearnLanguages", "AssociateLanguageDataWithPhraseData", "LanguageData", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LearnLanguages.DataAccess.Ef.LanguageData), "PhraseData", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LearnLanguages.DataAccess.Ef.PhraseData), true)]
[assembly: EdmRelationshipAttribute("LearnLanguages", "AssociationUserDataWithPhraseData", "UserData", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LearnLanguages.DataAccess.Ef.UserData), "PhraseData", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LearnLanguages.DataAccess.Ef.PhraseData), true)]
[assembly: EdmRelationshipAttribute("LearnLanguages", "AssociationUserDataWithLanguageData", "UserData", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LearnLanguages.DataAccess.Ef.UserData), "LanguageData", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LearnLanguages.DataAccess.Ef.LanguageData))]
[assembly: EdmRelationshipAttribute("LearnLanguages", "AssociationUserDataWithRoleData", "UserData", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LearnLanguages.DataAccess.Ef.UserData), "RoleData", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LearnLanguages.DataAccess.Ef.RoleData))]
[assembly: EdmRelationshipAttribute("LearnLanguages", "UserDataRoleData", "UserData", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LearnLanguages.DataAccess.Ef.UserData), "RoleData", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LearnLanguages.DataAccess.Ef.RoleData))]
[assembly: EdmRelationshipAttribute("LearnLanguages", "UserDataPhraseData", "UserData", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LearnLanguages.DataAccess.Ef.UserData), "PhraseData", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LearnLanguages.DataAccess.Ef.PhraseData), true)]
[assembly: EdmRelationshipAttribute("LearnLanguages", "PhraseDataLanguageData", "PhraseData", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LearnLanguages.DataAccess.Ef.PhraseData), "LanguageData", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LearnLanguages.DataAccess.Ef.LanguageData), true)]
[assembly: EdmRelationshipAttribute("LearnLanguages", "TranslationDataPhraseData", "TranslationData", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LearnLanguages.DataAccess.Ef.TranslationData), "PhraseData", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LearnLanguages.DataAccess.Ef.PhraseData))]
[assembly: EdmRelationshipAttribute("LearnLanguages", "UserDataTranslationData", "UserData", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LearnLanguages.DataAccess.Ef.UserData), "TranslationData", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LearnLanguages.DataAccess.Ef.TranslationData), true)]
[assembly: EdmRelationshipAttribute("LearnLanguages", "UserDataLanguageData", "UserData", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LearnLanguages.DataAccess.Ef.UserData), "LanguageData", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LearnLanguages.DataAccess.Ef.LanguageData), true)]
[assembly: EdmRelationshipAttribute("LearnLanguages", "UserDataLineData", "UserData", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LearnLanguages.DataAccess.Ef.UserData), "LineData", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LearnLanguages.DataAccess.Ef.LineData), true)]
[assembly: EdmRelationshipAttribute("LearnLanguages", "PhraseDataLineData", "PhraseData", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LearnLanguages.DataAccess.Ef.PhraseData), "LineData", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LearnLanguages.DataAccess.Ef.LineData), true)]
[assembly: EdmRelationshipAttribute("LearnLanguages", "ContextPhraseDataTranslationData", "PhraseData", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(LearnLanguages.DataAccess.Ef.PhraseData), "TranslationData", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LearnLanguages.DataAccess.Ef.TranslationData), true)]
[assembly: EdmRelationshipAttribute("LearnLanguages", "PhraseDataDefaultStudyAdvisorKnowledgeBeliefData", "PhraseData", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LearnLanguages.DataAccess.Ef.PhraseData), "DefaultStudyAdvisorKnowledgeBeliefData", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LearnLanguages.DataAccess.Ef.DefaultStudyAdvisorKnowledgeBeliefData), true)]
[assembly: EdmRelationshipAttribute("LearnLanguages", "PhraseDataPhraseBeliefData", "PhraseData", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LearnLanguages.DataAccess.Ef.PhraseData), "PhraseBeliefData", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LearnLanguages.DataAccess.Ef.PhraseBeliefData), true)]
[assembly: EdmRelationshipAttribute("LearnLanguages", "UserDataPhraseBeliefData", "UserData", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LearnLanguages.DataAccess.Ef.UserData), "PhraseBeliefData", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LearnLanguages.DataAccess.Ef.PhraseBeliefData), true)]
[assembly: EdmRelationshipAttribute("LearnLanguages", "MultiLineTextDataUserData", "MultiLineTextData", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LearnLanguages.DataAccess.Ef.MultiLineTextData), "UserData", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LearnLanguages.DataAccess.Ef.UserData), true)]
[assembly: EdmRelationshipAttribute("LearnLanguages", "LineDataMultiLineTextData", "LineData", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LearnLanguages.DataAccess.Ef.LineData), "MultiLineTextData", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LearnLanguages.DataAccess.Ef.MultiLineTextData))]

#endregion

namespace LearnLanguages.DataAccess.Ef
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class LearnLanguagesContext : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new LearnLanguagesContext object using the connection string found in the 'LearnLanguagesContext' section of the application configuration file.
        /// </summary>
        public LearnLanguagesContext() : base("name=LearnLanguagesContext", "LearnLanguagesContext")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new LearnLanguagesContext object.
        /// </summary>
        public LearnLanguagesContext(string connectionString) : base(connectionString, "LearnLanguagesContext")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new LearnLanguagesContext object.
        /// </summary>
        public LearnLanguagesContext(EntityConnection connection) : base(connection, "LearnLanguagesContext")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LanguageData> LanguageDatas
        {
            get
            {
                if ((_LanguageDatas == null))
                {
                    _LanguageDatas = base.CreateObjectSet<LanguageData>("LanguageDatas");
                }
                return _LanguageDatas;
            }
        }
        private ObjectSet<LanguageData> _LanguageDatas;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PhraseData> PhraseDatas
        {
            get
            {
                if ((_PhraseDatas == null))
                {
                    _PhraseDatas = base.CreateObjectSet<PhraseData>("PhraseDatas");
                }
                return _PhraseDatas;
            }
        }
        private ObjectSet<PhraseData> _PhraseDatas;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserData> UserDatas
        {
            get
            {
                if ((_UserDatas == null))
                {
                    _UserDatas = base.CreateObjectSet<UserData>("UserDatas");
                }
                return _UserDatas;
            }
        }
        private ObjectSet<UserData> _UserDatas;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RoleData> RoleDatas
        {
            get
            {
                if ((_RoleDatas == null))
                {
                    _RoleDatas = base.CreateObjectSet<RoleData>("RoleDatas");
                }
                return _RoleDatas;
            }
        }
        private ObjectSet<RoleData> _RoleDatas;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TranslationData> TranslationDatas
        {
            get
            {
                if ((_TranslationDatas == null))
                {
                    _TranslationDatas = base.CreateObjectSet<TranslationData>("TranslationDatas");
                }
                return _TranslationDatas;
            }
        }
        private ObjectSet<TranslationData> _TranslationDatas;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LineData> LineDatas
        {
            get
            {
                if ((_LineDatas == null))
                {
                    _LineDatas = base.CreateObjectSet<LineData>("LineDatas");
                }
                return _LineDatas;
            }
        }
        private ObjectSet<LineData> _LineDatas;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DefaultStudyAdvisorKnowledgeBeliefData> DefaultStudyAdvisorKnowledgeBeliefDatas
        {
            get
            {
                if ((_DefaultStudyAdvisorKnowledgeBeliefDatas == null))
                {
                    _DefaultStudyAdvisorKnowledgeBeliefDatas = base.CreateObjectSet<DefaultStudyAdvisorKnowledgeBeliefData>("DefaultStudyAdvisorKnowledgeBeliefDatas");
                }
                return _DefaultStudyAdvisorKnowledgeBeliefDatas;
            }
        }
        private ObjectSet<DefaultStudyAdvisorKnowledgeBeliefData> _DefaultStudyAdvisorKnowledgeBeliefDatas;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PhraseBeliefData> PhraseBeliefDatas
        {
            get
            {
                if ((_PhraseBeliefDatas == null))
                {
                    _PhraseBeliefDatas = base.CreateObjectSet<PhraseBeliefData>("PhraseBeliefDatas");
                }
                return _PhraseBeliefDatas;
            }
        }
        private ObjectSet<PhraseBeliefData> _PhraseBeliefDatas;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<StudyDataData> StudyDataDatas
        {
            get
            {
                if ((_StudyDataDatas == null))
                {
                    _StudyDataDatas = base.CreateObjectSet<StudyDataData>("StudyDataDatas");
                }
                return _StudyDataDatas;
            }
        }
        private ObjectSet<StudyDataData> _StudyDataDatas;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MultiLineTextData> MultiLineTextDatas
        {
            get
            {
                if ((_MultiLineTextDatas == null))
                {
                    _MultiLineTextDatas = base.CreateObjectSet<MultiLineTextData>("MultiLineTextDatas");
                }
                return _MultiLineTextDatas;
            }
        }
        private ObjectSet<MultiLineTextData> _MultiLineTextDatas;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LanguageDatas EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLanguageDatas(LanguageData languageData)
        {
            base.AddObject("LanguageDatas", languageData);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PhraseDatas EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPhraseDatas(PhraseData phraseData)
        {
            base.AddObject("PhraseDatas", phraseData);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserDatas EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserDatas(UserData userData)
        {
            base.AddObject("UserDatas", userData);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RoleDatas EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRoleDatas(RoleData roleData)
        {
            base.AddObject("RoleDatas", roleData);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TranslationDatas EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTranslationDatas(TranslationData translationData)
        {
            base.AddObject("TranslationDatas", translationData);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LineDatas EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLineDatas(LineData lineData)
        {
            base.AddObject("LineDatas", lineData);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DefaultStudyAdvisorKnowledgeBeliefDatas EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDefaultStudyAdvisorKnowledgeBeliefDatas(DefaultStudyAdvisorKnowledgeBeliefData defaultStudyAdvisorKnowledgeBeliefData)
        {
            base.AddObject("DefaultStudyAdvisorKnowledgeBeliefDatas", defaultStudyAdvisorKnowledgeBeliefData);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PhraseBeliefDatas EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPhraseBeliefDatas(PhraseBeliefData phraseBeliefData)
        {
            base.AddObject("PhraseBeliefDatas", phraseBeliefData);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the StudyDataDatas EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStudyDataDatas(StudyDataData studyDataData)
        {
            base.AddObject("StudyDataDatas", studyDataData);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MultiLineTextDatas EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMultiLineTextDatas(MultiLineTextData multiLineTextData)
        {
            base.AddObject("MultiLineTextDatas", multiLineTextData);
        }

        #endregion

        #region Function Imports
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="userId">No Metadata Documentation available.</param>
        /// <param name="username">No Metadata Documentation available.</param>
        public int DeleteUser_SP(Nullable<global::System.Guid> userId, global::System.String username)
        {
            ObjectParameter userIdParameter;
            if (userId.HasValue)
            {
                userIdParameter = new ObjectParameter("UserId", userId);
            }
            else
            {
                userIdParameter = new ObjectParameter("UserId", typeof(global::System.Guid));
            }
    
            ObjectParameter usernameParameter;
            if (username != null)
            {
                usernameParameter = new ObjectParameter("Username", username);
            }
            else
            {
                usernameParameter = new ObjectParameter("Username", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("DeleteUser_SP", userIdParameter, usernameParameter);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LearnLanguages", Name="DefaultStudyAdvisorKnowledgeBeliefData")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DefaultStudyAdvisorKnowledgeBeliefData : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DefaultStudyAdvisorKnowledgeBeliefData object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="expirationDate">Initial value of the ExpirationDate property.</param>
        /// <param name="phraseDataId">Initial value of the PhraseDataId property.</param>
        public static DefaultStudyAdvisorKnowledgeBeliefData CreateDefaultStudyAdvisorKnowledgeBeliefData(global::System.Guid id, global::System.DateTime expirationDate, global::System.Guid phraseDataId)
        {
            DefaultStudyAdvisorKnowledgeBeliefData defaultStudyAdvisorKnowledgeBeliefData = new DefaultStudyAdvisorKnowledgeBeliefData();
            defaultStudyAdvisorKnowledgeBeliefData.Id = id;
            defaultStudyAdvisorKnowledgeBeliefData.ExpirationDate = expirationDate;
            defaultStudyAdvisorKnowledgeBeliefData.PhraseDataId = phraseDataId;
            return defaultStudyAdvisorKnowledgeBeliefData;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ExpirationDate
        {
            get
            {
                return _ExpirationDate;
            }
            set
            {
                OnExpirationDateChanging(value);
                ReportPropertyChanging("ExpirationDate");
                _ExpirationDate = StructuralObject.SetValidValue(value, "ExpirationDate");
                ReportPropertyChanged("ExpirationDate");
                OnExpirationDateChanged();
            }
        }
        private global::System.DateTime _ExpirationDate;
        partial void OnExpirationDateChanging(global::System.DateTime value);
        partial void OnExpirationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid PhraseDataId
        {
            get
            {
                return _PhraseDataId;
            }
            set
            {
                OnPhraseDataIdChanging(value);
                ReportPropertyChanging("PhraseDataId");
                _PhraseDataId = StructuralObject.SetValidValue(value, "PhraseDataId");
                ReportPropertyChanged("PhraseDataId");
                OnPhraseDataIdChanged();
            }
        }
        private global::System.Guid _PhraseDataId;
        partial void OnPhraseDataIdChanging(global::System.Guid value);
        partial void OnPhraseDataIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LearnLanguages", "PhraseDataDefaultStudyAdvisorKnowledgeBeliefData", "PhraseData")]
        public PhraseData PhraseData
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PhraseData>("LearnLanguages.PhraseDataDefaultStudyAdvisorKnowledgeBeliefData", "PhraseData").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PhraseData>("LearnLanguages.PhraseDataDefaultStudyAdvisorKnowledgeBeliefData", "PhraseData").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PhraseData> PhraseDataReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PhraseData>("LearnLanguages.PhraseDataDefaultStudyAdvisorKnowledgeBeliefData", "PhraseData");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PhraseData>("LearnLanguages.PhraseDataDefaultStudyAdvisorKnowledgeBeliefData", "PhraseData", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LearnLanguages", Name="LanguageData")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LanguageData : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LanguageData object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="text">Initial value of the Text property.</param>
        /// <param name="userDataId">Initial value of the UserDataId property.</param>
        public static LanguageData CreateLanguageData(global::System.Guid id, global::System.String text, global::System.Guid userDataId)
        {
            LanguageData languageData = new LanguageData();
            languageData.Id = id;
            languageData.Text = text;
            languageData.UserDataId = userDataId;
            return languageData;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Text
        {
            get
            {
                return _Text;
            }
            set
            {
                OnTextChanging(value);
                ReportPropertyChanging("Text");
                _Text = StructuralObject.SetValidValue(value, false, "Text");
                ReportPropertyChanged("Text");
                OnTextChanged();
            }
        }
        private global::System.String _Text;
        partial void OnTextChanging(global::System.String value);
        partial void OnTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserDataId
        {
            get
            {
                return _UserDataId;
            }
            set
            {
                OnUserDataIdChanging(value);
                ReportPropertyChanging("UserDataId");
                _UserDataId = StructuralObject.SetValidValue(value, "UserDataId");
                ReportPropertyChanged("UserDataId");
                OnUserDataIdChanged();
            }
        }
        private global::System.Guid _UserDataId;
        partial void OnUserDataIdChanging(global::System.Guid value);
        partial void OnUserDataIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LearnLanguages", "PhraseDataLanguageData", "PhraseData")]
        public EntityCollection<PhraseData> PhraseDatas
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PhraseData>("LearnLanguages.PhraseDataLanguageData", "PhraseData");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PhraseData>("LearnLanguages.PhraseDataLanguageData", "PhraseData", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LearnLanguages", "UserDataLanguageData", "UserData")]
        public UserData UserData
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserData>("LearnLanguages.UserDataLanguageData", "UserData").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserData>("LearnLanguages.UserDataLanguageData", "UserData").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserData> UserDataReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserData>("LearnLanguages.UserDataLanguageData", "UserData");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserData>("LearnLanguages.UserDataLanguageData", "UserData", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LearnLanguages", Name="LineData")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LineData : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LineData object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="lineNumber">Initial value of the LineNumber property.</param>
        /// <param name="userDataId">Initial value of the UserDataId property.</param>
        /// <param name="phraseDataId">Initial value of the PhraseDataId property.</param>
        public static LineData CreateLineData(global::System.Guid id, global::System.Int32 lineNumber, global::System.Guid userDataId, global::System.Guid phraseDataId)
        {
            LineData lineData = new LineData();
            lineData.Id = id;
            lineData.LineNumber = lineNumber;
            lineData.UserDataId = userDataId;
            lineData.PhraseDataId = phraseDataId;
            return lineData;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LineNumber
        {
            get
            {
                return _LineNumber;
            }
            set
            {
                OnLineNumberChanging(value);
                ReportPropertyChanging("LineNumber");
                _LineNumber = StructuralObject.SetValidValue(value, "LineNumber");
                ReportPropertyChanged("LineNumber");
                OnLineNumberChanged();
            }
        }
        private global::System.Int32 _LineNumber;
        partial void OnLineNumberChanging(global::System.Int32 value);
        partial void OnLineNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserDataId
        {
            get
            {
                return _UserDataId;
            }
            set
            {
                OnUserDataIdChanging(value);
                ReportPropertyChanging("UserDataId");
                _UserDataId = StructuralObject.SetValidValue(value, "UserDataId");
                ReportPropertyChanged("UserDataId");
                OnUserDataIdChanged();
            }
        }
        private global::System.Guid _UserDataId;
        partial void OnUserDataIdChanging(global::System.Guid value);
        partial void OnUserDataIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid PhraseDataId
        {
            get
            {
                return _PhraseDataId;
            }
            set
            {
                OnPhraseDataIdChanging(value);
                ReportPropertyChanging("PhraseDataId");
                _PhraseDataId = StructuralObject.SetValidValue(value, "PhraseDataId");
                ReportPropertyChanged("PhraseDataId");
                OnPhraseDataIdChanged();
            }
        }
        private global::System.Guid _PhraseDataId;
        partial void OnPhraseDataIdChanging(global::System.Guid value);
        partial void OnPhraseDataIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LearnLanguages", "UserDataLineData", "UserData")]
        public UserData UserData
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserData>("LearnLanguages.UserDataLineData", "UserData").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserData>("LearnLanguages.UserDataLineData", "UserData").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserData> UserDataReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserData>("LearnLanguages.UserDataLineData", "UserData");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserData>("LearnLanguages.UserDataLineData", "UserData", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LearnLanguages", "PhraseDataLineData", "PhraseData")]
        public PhraseData PhraseData
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PhraseData>("LearnLanguages.PhraseDataLineData", "PhraseData").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PhraseData>("LearnLanguages.PhraseDataLineData", "PhraseData").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PhraseData> PhraseDataReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PhraseData>("LearnLanguages.PhraseDataLineData", "PhraseData");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PhraseData>("LearnLanguages.PhraseDataLineData", "PhraseData", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LearnLanguages", "LineDataMultiLineTextData", "MultiLineTextData")]
        public EntityCollection<MultiLineTextData> MultiLineTextDatas
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MultiLineTextData>("LearnLanguages.LineDataMultiLineTextData", "MultiLineTextData");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MultiLineTextData>("LearnLanguages.LineDataMultiLineTextData", "MultiLineTextData", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LearnLanguages", Name="MultiLineTextData")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MultiLineTextData : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MultiLineTextData object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        /// <param name="additionalMetadata">Initial value of the AdditionalMetadata property.</param>
        /// <param name="userDataId">Initial value of the UserDataId property.</param>
        public static MultiLineTextData CreateMultiLineTextData(global::System.Guid id, global::System.String title, global::System.String additionalMetadata, global::System.Guid userDataId)
        {
            MultiLineTextData multiLineTextData = new MultiLineTextData();
            multiLineTextData.Id = id;
            multiLineTextData.Title = title;
            multiLineTextData.AdditionalMetadata = additionalMetadata;
            multiLineTextData.UserDataId = userDataId;
            return multiLineTextData;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false, "Title");
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AdditionalMetadata
        {
            get
            {
                return _AdditionalMetadata;
            }
            set
            {
                OnAdditionalMetadataChanging(value);
                ReportPropertyChanging("AdditionalMetadata");
                _AdditionalMetadata = StructuralObject.SetValidValue(value, false, "AdditionalMetadata");
                ReportPropertyChanged("AdditionalMetadata");
                OnAdditionalMetadataChanged();
            }
        }
        private global::System.String _AdditionalMetadata;
        partial void OnAdditionalMetadataChanging(global::System.String value);
        partial void OnAdditionalMetadataChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserDataId
        {
            get
            {
                return _UserDataId;
            }
            set
            {
                OnUserDataIdChanging(value);
                ReportPropertyChanging("UserDataId");
                _UserDataId = StructuralObject.SetValidValue(value, "UserDataId");
                ReportPropertyChanged("UserDataId");
                OnUserDataIdChanged();
            }
        }
        private global::System.Guid _UserDataId;
        partial void OnUserDataIdChanging(global::System.Guid value);
        partial void OnUserDataIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LearnLanguages", "MultiLineTextDataUserData", "UserData")]
        public UserData UserData
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserData>("LearnLanguages.MultiLineTextDataUserData", "UserData").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserData>("LearnLanguages.MultiLineTextDataUserData", "UserData").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserData> UserDataReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserData>("LearnLanguages.MultiLineTextDataUserData", "UserData");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserData>("LearnLanguages.MultiLineTextDataUserData", "UserData", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LearnLanguages", "LineDataMultiLineTextData", "LineData")]
        public EntityCollection<LineData> LineDatas
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LineData>("LearnLanguages.LineDataMultiLineTextData", "LineData");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LineData>("LearnLanguages.LineDataMultiLineTextData", "LineData", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LearnLanguages", Name="PhraseBeliefData")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PhraseBeliefData : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PhraseBeliefData object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="timeStamp">Initial value of the TimeStamp property.</param>
        /// <param name="text">Initial value of the Text property.</param>
        /// <param name="strength">Initial value of the Strength property.</param>
        /// <param name="believerId">Initial value of the BelieverId property.</param>
        /// <param name="reviewMethodId">Initial value of the ReviewMethodId property.</param>
        /// <param name="phraseDataId">Initial value of the PhraseDataId property.</param>
        /// <param name="userDataId">Initial value of the UserDataId property.</param>
        public static PhraseBeliefData CreatePhraseBeliefData(global::System.Guid id, global::System.DateTime timeStamp, global::System.String text, global::System.Double strength, global::System.Guid believerId, global::System.Guid reviewMethodId, global::System.Guid phraseDataId, global::System.Guid userDataId)
        {
            PhraseBeliefData phraseBeliefData = new PhraseBeliefData();
            phraseBeliefData.Id = id;
            phraseBeliefData.TimeStamp = timeStamp;
            phraseBeliefData.Text = text;
            phraseBeliefData.Strength = strength;
            phraseBeliefData.BelieverId = believerId;
            phraseBeliefData.ReviewMethodId = reviewMethodId;
            phraseBeliefData.PhraseDataId = phraseDataId;
            phraseBeliefData.UserDataId = userDataId;
            return phraseBeliefData;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime TimeStamp
        {
            get
            {
                return _TimeStamp;
            }
            set
            {
                OnTimeStampChanging(value);
                ReportPropertyChanging("TimeStamp");
                _TimeStamp = StructuralObject.SetValidValue(value, "TimeStamp");
                ReportPropertyChanged("TimeStamp");
                OnTimeStampChanged();
            }
        }
        private global::System.DateTime _TimeStamp;
        partial void OnTimeStampChanging(global::System.DateTime value);
        partial void OnTimeStampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Text
        {
            get
            {
                return _Text;
            }
            set
            {
                OnTextChanging(value);
                ReportPropertyChanging("Text");
                _Text = StructuralObject.SetValidValue(value, false, "Text");
                ReportPropertyChanged("Text");
                OnTextChanged();
            }
        }
        private global::System.String _Text;
        partial void OnTextChanging(global::System.String value);
        partial void OnTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Strength
        {
            get
            {
                return _Strength;
            }
            set
            {
                OnStrengthChanging(value);
                ReportPropertyChanging("Strength");
                _Strength = StructuralObject.SetValidValue(value, "Strength");
                ReportPropertyChanged("Strength");
                OnStrengthChanged();
            }
        }
        private global::System.Double _Strength;
        partial void OnStrengthChanging(global::System.Double value);
        partial void OnStrengthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid BelieverId
        {
            get
            {
                return _BelieverId;
            }
            set
            {
                OnBelieverIdChanging(value);
                ReportPropertyChanging("BelieverId");
                _BelieverId = StructuralObject.SetValidValue(value, "BelieverId");
                ReportPropertyChanged("BelieverId");
                OnBelieverIdChanged();
            }
        }
        private global::System.Guid _BelieverId;
        partial void OnBelieverIdChanging(global::System.Guid value);
        partial void OnBelieverIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ReviewMethodId
        {
            get
            {
                return _ReviewMethodId;
            }
            set
            {
                OnReviewMethodIdChanging(value);
                ReportPropertyChanging("ReviewMethodId");
                _ReviewMethodId = StructuralObject.SetValidValue(value, "ReviewMethodId");
                ReportPropertyChanged("ReviewMethodId");
                OnReviewMethodIdChanged();
            }
        }
        private global::System.Guid _ReviewMethodId;
        partial void OnReviewMethodIdChanging(global::System.Guid value);
        partial void OnReviewMethodIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid PhraseDataId
        {
            get
            {
                return _PhraseDataId;
            }
            set
            {
                OnPhraseDataIdChanging(value);
                ReportPropertyChanging("PhraseDataId");
                _PhraseDataId = StructuralObject.SetValidValue(value, "PhraseDataId");
                ReportPropertyChanged("PhraseDataId");
                OnPhraseDataIdChanged();
            }
        }
        private global::System.Guid _PhraseDataId;
        partial void OnPhraseDataIdChanging(global::System.Guid value);
        partial void OnPhraseDataIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserDataId
        {
            get
            {
                return _UserDataId;
            }
            set
            {
                OnUserDataIdChanging(value);
                ReportPropertyChanging("UserDataId");
                _UserDataId = StructuralObject.SetValidValue(value, "UserDataId");
                ReportPropertyChanged("UserDataId");
                OnUserDataIdChanged();
            }
        }
        private global::System.Guid _UserDataId;
        partial void OnUserDataIdChanging(global::System.Guid value);
        partial void OnUserDataIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LearnLanguages", "PhraseDataPhraseBeliefData", "PhraseData")]
        public PhraseData PhraseData
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PhraseData>("LearnLanguages.PhraseDataPhraseBeliefData", "PhraseData").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PhraseData>("LearnLanguages.PhraseDataPhraseBeliefData", "PhraseData").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PhraseData> PhraseDataReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PhraseData>("LearnLanguages.PhraseDataPhraseBeliefData", "PhraseData");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PhraseData>("LearnLanguages.PhraseDataPhraseBeliefData", "PhraseData", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LearnLanguages", "UserDataPhraseBeliefData", "UserData")]
        public UserData UserData
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserData>("LearnLanguages.UserDataPhraseBeliefData", "UserData").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserData>("LearnLanguages.UserDataPhraseBeliefData", "UserData").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserData> UserDataReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserData>("LearnLanguages.UserDataPhraseBeliefData", "UserData");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserData>("LearnLanguages.UserDataPhraseBeliefData", "UserData", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LearnLanguages", Name="PhraseData")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PhraseData : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PhraseData object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="text">Initial value of the Text property.</param>
        /// <param name="userDataId">Initial value of the UserDataId property.</param>
        /// <param name="languageDataId">Initial value of the LanguageDataId property.</param>
        public static PhraseData CreatePhraseData(global::System.Guid id, global::System.String text, global::System.Guid userDataId, global::System.Guid languageDataId)
        {
            PhraseData phraseData = new PhraseData();
            phraseData.Id = id;
            phraseData.Text = text;
            phraseData.UserDataId = userDataId;
            phraseData.LanguageDataId = languageDataId;
            return phraseData;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Text
        {
            get
            {
                return _Text;
            }
            set
            {
                OnTextChanging(value);
                ReportPropertyChanging("Text");
                _Text = StructuralObject.SetValidValue(value, false, "Text");
                ReportPropertyChanged("Text");
                OnTextChanged();
            }
        }
        private global::System.String _Text;
        partial void OnTextChanging(global::System.String value);
        partial void OnTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserDataId
        {
            get
            {
                return _UserDataId;
            }
            set
            {
                OnUserDataIdChanging(value);
                ReportPropertyChanging("UserDataId");
                _UserDataId = StructuralObject.SetValidValue(value, "UserDataId");
                ReportPropertyChanged("UserDataId");
                OnUserDataIdChanged();
            }
        }
        private global::System.Guid _UserDataId;
        partial void OnUserDataIdChanging(global::System.Guid value);
        partial void OnUserDataIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid LanguageDataId
        {
            get
            {
                return _LanguageDataId;
            }
            set
            {
                OnLanguageDataIdChanging(value);
                ReportPropertyChanging("LanguageDataId");
                _LanguageDataId = StructuralObject.SetValidValue(value, "LanguageDataId");
                ReportPropertyChanged("LanguageDataId");
                OnLanguageDataIdChanged();
            }
        }
        private global::System.Guid _LanguageDataId;
        partial void OnLanguageDataIdChanging(global::System.Guid value);
        partial void OnLanguageDataIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LearnLanguages", "UserDataPhraseData", "UserData")]
        public UserData UserData
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserData>("LearnLanguages.UserDataPhraseData", "UserData").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserData>("LearnLanguages.UserDataPhraseData", "UserData").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserData> UserDataReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserData>("LearnLanguages.UserDataPhraseData", "UserData");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserData>("LearnLanguages.UserDataPhraseData", "UserData", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LearnLanguages", "PhraseDataLanguageData", "LanguageData")]
        public LanguageData LanguageData
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LanguageData>("LearnLanguages.PhraseDataLanguageData", "LanguageData").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LanguageData>("LearnLanguages.PhraseDataLanguageData", "LanguageData").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LanguageData> LanguageDataReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LanguageData>("LearnLanguages.PhraseDataLanguageData", "LanguageData");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LanguageData>("LearnLanguages.PhraseDataLanguageData", "LanguageData", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LearnLanguages", "TranslationDataPhraseData", "TranslationData")]
        public EntityCollection<TranslationData> TranslationDatas
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TranslationData>("LearnLanguages.TranslationDataPhraseData", "TranslationData");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TranslationData>("LearnLanguages.TranslationDataPhraseData", "TranslationData", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LearnLanguages", "PhraseDataLineData", "LineData")]
        public EntityCollection<LineData> LineDatas
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LineData>("LearnLanguages.PhraseDataLineData", "LineData");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LineData>("LearnLanguages.PhraseDataLineData", "LineData", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LearnLanguages", "ContextPhraseDataTranslationData", "TranslationData")]
        public EntityCollection<TranslationData> ContextTranslationData
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TranslationData>("LearnLanguages.ContextPhraseDataTranslationData", "TranslationData");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TranslationData>("LearnLanguages.ContextPhraseDataTranslationData", "TranslationData", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LearnLanguages", "PhraseDataDefaultStudyAdvisorKnowledgeBeliefData", "DefaultStudyAdvisorKnowledgeBeliefData")]
        public EntityCollection<DefaultStudyAdvisorKnowledgeBeliefData> DefaultStudyAdvisorKnowledgeBeliefDatas
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DefaultStudyAdvisorKnowledgeBeliefData>("LearnLanguages.PhraseDataDefaultStudyAdvisorKnowledgeBeliefData", "DefaultStudyAdvisorKnowledgeBeliefData");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DefaultStudyAdvisorKnowledgeBeliefData>("LearnLanguages.PhraseDataDefaultStudyAdvisorKnowledgeBeliefData", "DefaultStudyAdvisorKnowledgeBeliefData", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LearnLanguages", "PhraseDataPhraseBeliefData", "PhraseBeliefData")]
        public EntityCollection<PhraseBeliefData> PhraseBeliefDatas
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PhraseBeliefData>("LearnLanguages.PhraseDataPhraseBeliefData", "PhraseBeliefData");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PhraseBeliefData>("LearnLanguages.PhraseDataPhraseBeliefData", "PhraseBeliefData", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LearnLanguages", Name="RoleData")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RoleData : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RoleData object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="text">Initial value of the Text property.</param>
        public static RoleData CreateRoleData(global::System.Guid id, global::System.String text)
        {
            RoleData roleData = new RoleData();
            roleData.Id = id;
            roleData.Text = text;
            return roleData;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Text
        {
            get
            {
                return _Text;
            }
            set
            {
                OnTextChanging(value);
                ReportPropertyChanging("Text");
                _Text = StructuralObject.SetValidValue(value, false, "Text");
                ReportPropertyChanged("Text");
                OnTextChanged();
            }
        }
        private global::System.String _Text;
        partial void OnTextChanging(global::System.String value);
        partial void OnTextChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LearnLanguages", "UserDataRoleData", "UserData")]
        public EntityCollection<UserData> UserDatas
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserData>("LearnLanguages.UserDataRoleData", "UserData");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserData>("LearnLanguages.UserDataRoleData", "UserData", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LearnLanguages", Name="StudyDataData")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class StudyDataData : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new StudyDataData object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="nativeLanguageText">Initial value of the NativeLanguageText property.</param>
        /// <param name="username">Initial value of the Username property.</param>
        public static StudyDataData CreateStudyDataData(global::System.Guid id, global::System.String nativeLanguageText, global::System.String username)
        {
            StudyDataData studyDataData = new StudyDataData();
            studyDataData.Id = id;
            studyDataData.NativeLanguageText = nativeLanguageText;
            studyDataData.Username = username;
            return studyDataData;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NativeLanguageText
        {
            get
            {
                return _NativeLanguageText;
            }
            set
            {
                OnNativeLanguageTextChanging(value);
                ReportPropertyChanging("NativeLanguageText");
                _NativeLanguageText = StructuralObject.SetValidValue(value, false, "NativeLanguageText");
                ReportPropertyChanged("NativeLanguageText");
                OnNativeLanguageTextChanged();
            }
        }
        private global::System.String _NativeLanguageText;
        partial void OnNativeLanguageTextChanging(global::System.String value);
        partial void OnNativeLanguageTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Username
        {
            get
            {
                return _Username;
            }
            set
            {
                OnUsernameChanging(value);
                ReportPropertyChanging("Username");
                _Username = StructuralObject.SetValidValue(value, false, "Username");
                ReportPropertyChanged("Username");
                OnUsernameChanged();
            }
        }
        private global::System.String _Username;
        partial void OnUsernameChanging(global::System.String value);
        partial void OnUsernameChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LearnLanguages", Name="TranslationData")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TranslationData : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TranslationData object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="userDataId">Initial value of the UserDataId property.</param>
        public static TranslationData CreateTranslationData(global::System.Guid id, global::System.Guid userDataId)
        {
            TranslationData translationData = new TranslationData();
            translationData.Id = id;
            translationData.UserDataId = userDataId;
            return translationData;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserDataId
        {
            get
            {
                return _UserDataId;
            }
            set
            {
                OnUserDataIdChanging(value);
                ReportPropertyChanging("UserDataId");
                _UserDataId = StructuralObject.SetValidValue(value, "UserDataId");
                ReportPropertyChanged("UserDataId");
                OnUserDataIdChanged();
            }
        }
        private global::System.Guid _UserDataId;
        partial void OnUserDataIdChanging(global::System.Guid value);
        partial void OnUserDataIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ContextPhraseDataId
        {
            get
            {
                return _ContextPhraseDataId;
            }
            set
            {
                OnContextPhraseDataIdChanging(value);
                ReportPropertyChanging("ContextPhraseDataId");
                _ContextPhraseDataId = StructuralObject.SetValidValue(value, "ContextPhraseDataId");
                ReportPropertyChanged("ContextPhraseDataId");
                OnContextPhraseDataIdChanged();
            }
        }
        private Nullable<global::System.Guid> _ContextPhraseDataId;
        partial void OnContextPhraseDataIdChanging(Nullable<global::System.Guid> value);
        partial void OnContextPhraseDataIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LearnLanguages", "TranslationDataPhraseData", "PhraseData")]
        public EntityCollection<PhraseData> PhraseDatas
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PhraseData>("LearnLanguages.TranslationDataPhraseData", "PhraseData");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PhraseData>("LearnLanguages.TranslationDataPhraseData", "PhraseData", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LearnLanguages", "UserDataTranslationData", "UserData")]
        public UserData UserData
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserData>("LearnLanguages.UserDataTranslationData", "UserData").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserData>("LearnLanguages.UserDataTranslationData", "UserData").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserData> UserDataReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserData>("LearnLanguages.UserDataTranslationData", "UserData");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserData>("LearnLanguages.UserDataTranslationData", "UserData", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LearnLanguages", "ContextPhraseDataTranslationData", "PhraseData")]
        public PhraseData ContextPhraseData
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PhraseData>("LearnLanguages.ContextPhraseDataTranslationData", "PhraseData").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PhraseData>("LearnLanguages.ContextPhraseDataTranslationData", "PhraseData").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PhraseData> ContextPhraseDataReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PhraseData>("LearnLanguages.ContextPhraseDataTranslationData", "PhraseData");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PhraseData>("LearnLanguages.ContextPhraseDataTranslationData", "PhraseData", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LearnLanguages", Name="UserData")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserData : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserData object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="username">Initial value of the Username property.</param>
        /// <param name="salt">Initial value of the Salt property.</param>
        /// <param name="saltedHashedPasswordValue">Initial value of the SaltedHashedPasswordValue property.</param>
        public static UserData CreateUserData(global::System.Guid id, global::System.String username, global::System.Int32 salt, global::System.String saltedHashedPasswordValue)
        {
            UserData userData = new UserData();
            userData.Id = id;
            userData.Username = username;
            userData.Salt = salt;
            userData.SaltedHashedPasswordValue = saltedHashedPasswordValue;
            return userData;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Username
        {
            get
            {
                return _Username;
            }
            set
            {
                OnUsernameChanging(value);
                ReportPropertyChanging("Username");
                _Username = StructuralObject.SetValidValue(value, false, "Username");
                ReportPropertyChanged("Username");
                OnUsernameChanged();
            }
        }
        private global::System.String _Username;
        partial void OnUsernameChanging(global::System.String value);
        partial void OnUsernameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Salt
        {
            get
            {
                return _Salt;
            }
            set
            {
                OnSaltChanging(value);
                ReportPropertyChanging("Salt");
                _Salt = StructuralObject.SetValidValue(value, "Salt");
                ReportPropertyChanged("Salt");
                OnSaltChanged();
            }
        }
        private global::System.Int32 _Salt;
        partial void OnSaltChanging(global::System.Int32 value);
        partial void OnSaltChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SaltedHashedPasswordValue
        {
            get
            {
                return _SaltedHashedPasswordValue;
            }
            set
            {
                OnSaltedHashedPasswordValueChanging(value);
                ReportPropertyChanging("SaltedHashedPasswordValue");
                _SaltedHashedPasswordValue = StructuralObject.SetValidValue(value, false, "SaltedHashedPasswordValue");
                ReportPropertyChanged("SaltedHashedPasswordValue");
                OnSaltedHashedPasswordValueChanged();
            }
        }
        private global::System.String _SaltedHashedPasswordValue;
        partial void OnSaltedHashedPasswordValueChanging(global::System.String value);
        partial void OnSaltedHashedPasswordValueChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LearnLanguages", "UserDataRoleData", "RoleData")]
        public EntityCollection<RoleData> RoleDatas
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RoleData>("LearnLanguages.UserDataRoleData", "RoleData");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RoleData>("LearnLanguages.UserDataRoleData", "RoleData", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LearnLanguages", "UserDataPhraseData", "PhraseData")]
        public EntityCollection<PhraseData> PhraseDatas
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PhraseData>("LearnLanguages.UserDataPhraseData", "PhraseData");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PhraseData>("LearnLanguages.UserDataPhraseData", "PhraseData", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LearnLanguages", "UserDataTranslationData", "TranslationData")]
        public EntityCollection<TranslationData> TranslationDatas
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TranslationData>("LearnLanguages.UserDataTranslationData", "TranslationData");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TranslationData>("LearnLanguages.UserDataTranslationData", "TranslationData", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LearnLanguages", "UserDataLanguageData", "LanguageData")]
        public EntityCollection<LanguageData> LanguageDatas
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LanguageData>("LearnLanguages.UserDataLanguageData", "LanguageData");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LanguageData>("LearnLanguages.UserDataLanguageData", "LanguageData", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LearnLanguages", "UserDataLineData", "LineData")]
        public EntityCollection<LineData> LineDatas
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LineData>("LearnLanguages.UserDataLineData", "LineData");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LineData>("LearnLanguages.UserDataLineData", "LineData", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LearnLanguages", "UserDataPhraseBeliefData", "PhraseBeliefData")]
        public EntityCollection<PhraseBeliefData> PhraseBeliefDatas
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PhraseBeliefData>("LearnLanguages.UserDataPhraseBeliefData", "PhraseBeliefData");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PhraseBeliefData>("LearnLanguages.UserDataPhraseBeliefData", "PhraseBeliefData", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LearnLanguages", "MultiLineTextDataUserData", "MultiLineTextData")]
        public EntityCollection<MultiLineTextData> MultiLineTextDatas
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MultiLineTextData>("LearnLanguages.MultiLineTextDataUserData", "MultiLineTextData");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MultiLineTextData>("LearnLanguages.MultiLineTextDataUserData", "MultiLineTextData", value);
                }
            }
        }

        #endregion

    }

    #endregion

}
